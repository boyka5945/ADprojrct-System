@model IEnumerable<Inventory_mvc.Models.Purchase_Detail>



@{
    ViewBag.Title = "Raise Purchase Order";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var errorMessage = TempData["ErrorMessage"];
    var qtyErrorMessage = TempData["QtyErrorMessage"];
    var priceErrorMessage = TempData["PriceErrorMessage"];
    var itemCodeErrorMessage = TempData["ItemCodeErrorMessage"];
    var exceptionMessage = TempData["ExceptionMessage"];
    var duplicateMessage = TempData["DuplicateEntryMessage"];


    List<Inventory_mvc.ViewModel.StationeryViewModel> itemCodeLists = ViewBag.itemCodeList;

    //List<Inventory_mvc.Models.Purchase_Order_Record> Model = ViewBag.model;
    //List<Inventory_mvc.ViewModel.Purchase_Order_RecordViewModel> Model = ViewBag.model;
}

@if (duplicateMessage != null)
{
    <div class="alert alert-danger">
        @duplicateMessage.ToString()
    </div>
}
@if (errorMessage != null)
{
    <div class="alert alert-danger">
        @errorMessage.ToString()
    </div>
}

@if (qtyErrorMessage != null)
{
    <div class="alert alert-danger">
        @qtyErrorMessage.ToString()
    </div>
}
@if (priceErrorMessage != null)
{
    <div class="alert alert-danger">
        @priceErrorMessage.ToString()
    </div>
}

@if (itemCodeErrorMessage != null)
{
    <div class="alert alert-danger">
        @itemCodeErrorMessage.ToString()
    </div>
}

<!DOCTYPE html>

<html>
<head>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.6/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js"></script>
    <meta name="viewport" content="width=device-width" />
    <title>ListPurchaseOrders</title>
    <style>
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content */
        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        /* The Close Button */
        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }
    </style>

</head>
<body>


    <h2>Purchase Order Generation List</h2>


    @using (Html.BeginForm("RaisePurchaseOrder", "Purchase", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" style="display: none">

                @Html.Label("Order Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <input type="text" name="orderNo" value="@ViewBag.orderNo">

                </div>
            </div>

            <div class="form-group">


                @Html.Label("Item Code", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("itemCode", (SelectList) ViewBag.itemCodeList))*@
                    @*@Html.Editor("itemCode")
                        @Html.ValidationMessage("itemCode","", new { @class = "text-danger" })*@

                    <select name="itemCode" class="custom-select my-1 mr-sm-2" onchange="valueSelected()">
                        <option value="--Select--" selected="selected">--Select--</option>

                        @foreach (var itmeCode in itemCodeLists)
                        {
                            string selected = "";

                            if (ViewBag.itemCode == itmeCode.ItemCode.ToString())
                            {
                                selected = "selected";
                            }

                            <option value="@itmeCode.ItemCode" @selected> @itmeCode.ItemCode </option>
                        }

                     

                    </select>

                    
                    @Html.ValidationMessage("itemCode", "", new { @class = "text-danger" })
                    
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Item Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <input type="text" id="itcode" readonly />
                    @*@Html.Editor("description")*@
                    @*@Html.ValidationMessage("description")*@
                </div>
            </div>

            <div class="form-group">

                @Html.Label("Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.Editor("qty")
                    @Html.ValidationMessage("qty", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @Html.Label("Price", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("price", new {@id="defaultPrice" })
                    @Html.ValidationMessage("price", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Supplier", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <select name="supplierCode">
                        <option value="ALPA">ALPHA Office Supplies</option>
                        <option value="BANE">BANES Shop</option>
                        <option value="CHEP">Cheap Stationery</option>
                        @*<option value="OMEG">OMEGA Stationery Supplier</option>*@
                    </select>

                    @Html.ValidationMessage("supplierCode")
                </div>
            </div>


            <div class="form-group">


                @Html.Label("Remarks", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.Editor("remarks")
                    @*@Html.ValidationMessage("remarks")*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add" class="btn btn-default" />
                </div>
            </div>
        </div>
    }



    <h4>Item List</h4>
    <table class="table">
        <tr>
            <th>
                @Html.Label("Item Code")
            </th>
            <th>
                @Html.Label("Description")
            </th>

            <th>
                @Html.Label("Price")
            </th>

            <th>
                @Html.Label("Quantity")
            </th>

            <th>
                @Html.Label("Total Price")
            </th>

            <th>
                @Html.Label("Remarks")
            </th>

        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.itemCode)
                </td>
                <td>
                    @{
                        Inventory_mvc.Models.StationeryModel Entity = new Inventory_mvc.Models.StationeryModel();
                        Inventory_mvc.Models.Stationery s = new Inventory_mvc.Models.Stationery();


                        s = Entity.Stationeries.Where(x => x.itemCode == item.itemCode).First();
                        String description = s.description;
         
                        @Html.Label(description)



                    }
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.price)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.qty, new { id = "qty" + item.itemCode })
                </td>

                <td>
                    @{
                        int totalPrice = (int)item.price * item.qty;
                    }
                    @Html.Label(totalPrice.ToString(), new { id = "price" + item.itemCode })
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.remarks)
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |*@
                    <button name="@item.itemCode" onclick="showModal(self)" class="btn btn-primary">Edit</button>

                    @Html.ActionLink("Delete", "DeletePD", new { id = item.itemCode })
                </td>
            </tr>
                        }

    </table>

    @Html.ActionLink("Clear", "ClearSession", "Purchase", new { @class = "btn btn-default", style = "float: right" })
    @Html.ActionLink("Generate Purchase Order", "GeneratePO", "Purchase", new { @class = "btn btn-primary", style = "float: left" }, null)



    <div>
        <br />
        <br />
        @Html.ActionLink("Back to PO List", "ListPurchaseOrders", "Purchase", new { style = "float: left" })
        <br />
        <br />

    </div>


    <!-- The Modal Box -->
    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
            @using (Html.BeginForm("UpdatePD", "Purchase", FormMethod.Post))
            {
                <p>Item Code</p>
                <input type="text" name="ditemCode" />
                <p>Price</p>
                <input type="text" name="dprice" />
                <p>Quantity</p>
                <input type="text" name="dqty" />
                <p>Remarks</p>
                <input type="text" name="dremarks" />
                <br />
                <input type="submit" value="Update" />
                <br />
                <span class="close" onclick="close">&times;</span>
            }
        </div>

    </div>




    <script>

        //window.onload = function () {
        //    if (window.jQuery) {
        //        // jQuery is loaded
        //        alert("Yeah!");
        //    } else {
        //        // jQuery is not loaded
        //        alert("Doesn't Work");
        //    }
        //}

        // Get the modal
        var modal = document.getElementById('myModal');

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        var pricetbox = document.getElementById('itcode');

        var descriptiontbox = document.getElementById('defaultPrice');





        $('button').click(function () {



            modal.style.display = "block";
            $("[name='ditemCode']").val($(this).attr('name'));
            //change this to refer to already exisint value
            $("[name='dprice']").val();
            $("[name='dqty']").val();


        });

        //function showModal(obj) {

        //    modal.style.display = "block";
        //    var source = obj;

        //   alert(source)


        //}

        //btn.onclick(function () {
        //    alert("beee");
        //        modal.style.display = "block";
        //        icodeLabel = $(this).prop.name;

        //    })

        function close() {
            modal.style.display = "none";
        }



        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
       
        ////on selecting from dropdownlist display item description
        function valueSelected() {

            var ddlist = $(this).val();
            pricetbox.val(ddlist);

        }

    </script>

</body>
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
</html>