@model IEnumerable<Inventory_mvc.ViewModel.RequisitionDetailViewModel>

@{
    ViewBag.Title = "EditRecord";

    var errorMessage = TempData["ErrorMessage"];
}

<h2>Edit Requisition</h2>
<br />


<div class="form-group row">
    <label class="col-sm-2 col-form-label font-weight-bold">@Html.DisplayNameFor(model => model.RequisitionNo):</label>
    <div class="col-sm-10">
        <label class="col-sm-2 col-form-label">@ViewBag.RequisitionFormNo</label>
    </div>
</div>
<div class="form-group row">
    <label class="col-sm-2 col-form-label font-weight-bold">Approval Status:</label>
    <div class="col-sm-10">
        <label class="col-sm-2 col-form-label">@ViewBag.ApprovalStatus</label>
    </div>
</div>

<br />
@if (errorMessage != null)
{
    <div class="alert alert-danger">
        @errorMessage.ToString()
    </div>
}

<br />
@using (Html.BeginForm("EditRecord", "ListRequisitions", null, FormMethod.Post, new { @class = "form", id = "editForm" }))
{

    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Description)</th>
                <th>@Html.DisplayNameFor(model => model.UOM)</th>
                <th>@Html.DisplayNameFor(model => model.RequestQty)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @Html.AntiForgeryToken()

            @for (int i = 0; i < Model.Count(); i++)
            {
                var item = Model.ElementAt(i);

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <tr>
                    <td>
                        <input type="hidden" name="[@i].RequisitionNo" value="@item.RequisitionNo" />
                        <input type="hidden" name="[@i].ItemCode" value="@item.ItemCode" />
                        <input type="hidden" name="[@i].Description" value="@item.Description" />
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UOM)
                    </td>
                    <td>
                        <input type="number" min="1" value="@item.RequestQty" name="[@i].RequestQty" class="form-control"/>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <input type="submit" value="Confirm Changes" class="btn btn-success" />
    <input type="button" value="Cancel"  class="btn btn-secondary" onclick="window.location.href='@Url.Action("ShowDetail", new { id = ViewBag.RequisitionFormNo })'" />
        <br />
}


<!-- The below code is for the modal dialog -->
<div class="modal fade" id="editItemModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" id="editItemModalBodyDiv">
        </div>
    </div>
</div>


