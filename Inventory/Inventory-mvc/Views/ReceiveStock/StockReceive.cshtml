@model IEnumerable<Inventory_mvc.Models.Purchase_Detail>

@{
    ViewBag.Title = "StockReceive";
    var errorMessage = TempData["searchError"];
    var fulfilledItemError = TempData["icodesFilled"];
    List<string> fulfilledItemList = (List<string>)fulfilledItemError;

}

<!doctype html>
<html>

<head>

    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
  $( function() {
    $( "#datepicker" ).datepicker();
  } );
    </script>

</head>

<body>

    <h2>StockReceive</h2>
    <div>
        @if (fulfilledItemError != null)
        {
            <p style="color: red;">The following items have already been fulfilled. </p>
            foreach (string s in fulfilledItemList)
            {
                <p style="color: red;">@s</p>
            }

        }
    </div>
            @using (Html.BeginForm("StockReceive", "ReceiveStock", FormMethod.Post))
            {

               
                    <div class="row" style="margin-top: 10px; margin-bottom: 10px;">
                        <div class="col-md-2">
                            @Html.Label("PO Number", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-10">
                                <input type="text" value="@ViewBag.PONumber" name="searchPONumber" required/>
                                @*@Html.TextBox("searchPONumber", ViewBag.PONumber as string)*@
                                <input type="submit" value="Search" class="btn btn-primary" style=" margin-left:10px;" />
                                @*@if (errorMessage != null)
                                {
                                    <p id="ponumValidation">@errorMessage</p>

                                }*@
                            </div>
                        </div>

                    <div class="row" style="margin-top: 10px; margin-bottom: 10px;">
                        <div class="col-md-2">
                            @Html.Label("Supplier", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.TextBox("showSupplier", ViewBag.Supplier as string, new { @readonly = "readonly" })
                            </div>
                        </div>

                 
                    }
                    @using (Html.BeginForm("UpdateReceived", "ReceiveStock", FormMethod.Get))
                    {


                     
                            <div class="row" style="margin-top: 10px; margin-bottom: 10px;">
                                <div class="col-md-2">
                                    @Html.Label("DO Number", htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-10">
                                        <input type="number" name="DONumber" value="@ViewBag.DOnumber" required />
                                        @*@Html.TextBox("DONumber")*@
                                    </div>
                                </div>

                            <div class="row" style="margin-top: 10px; margin-bottom: 10px;">
                                <div class="col-md-2">
                                    @Html.Label("Received Date", htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    @*@Html.TextBox("ReceivedDate")*@
                                    <div class="col-md-10">
                                        <input type="text" id="datepicker" name="ReceivedDate" value="@ViewBag.ReceivedDate" required />
                                    </div>
                                </div>

                            

                            <input type="hidden" value="@ViewBag.PONumber" name="PONumber" />
                            <input type="hidden" value="@ViewBag.Supplier" name="supplier" />




                            <table class="table">
                                <tr>
                                    <th>
                                        @Html.Label("Item Code")
                                    </th>
                                    <th>
                                        @Html.Label("Description")
                                    </th>
                                    <th>
                                        @Html.Label("Ordered")
                                    </th>
                                    <th>
                                        @Html.Label("Unreceived")
                                    </th>
                                    <th>
                                        @Html.Label("Received")
                                    </th>
                                    <th>
                                        @Html.Label("UOM")
                                    </th>
                                    <th>
                                        @Html.Label("Remarks")
                                    </th>
                                </tr>

                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.itemCode)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Stationery.description)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.qty)
                                        </td>
                                        <td>
                                            @{
                                                int fulfilled;
                                                if (item.fulfilledQty.HasValue)
                                                {
                                                    fulfilled = item.fulfilledQty.Value;
                                                }
                                                else
                                                {
                                                    fulfilled = 0;

                                                }
                                                string qtyOutstanding = (item.qty - fulfilled).ToString();
                                            }
                                            @Html.Label(qtyOutstanding)
                                        </td>
                                        <td>
                                            @*//input for received*@
                                            <div class="form-inline">
                                                <input type="number" name="num-@item.itemCode" value="0" min="0" class="form-control" placeholder="FulfilledQty" />

                                            </div>
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Stationery.unitOfMeasure)
                                        </td>
                                        <td>
                                            @*//input for remarks*@
                                            <input type="text" name="rem-@item.itemCode" />
                                        </td>
                                    </tr>
                                                }


                            </table>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @*@Html.ActionLink("Submit All as Received", "UpdateReceived", "ReceiveStock", new { @class = "all", checker = "allReceived" }, null)*@
                                    <input type="submit" name="sbutton" value="Submit All" class="btn btn-danger" />
                                    @*<input type="submit" value="Fill in all unreceived quantity"  class="btn btn-default" />*@
                                    <input type="submit" name="sbutton" value="Submit" class="btn btn-danger" />
                                </div>
                            </div>
                            }

    <br />
    <br />
    <br />
    <br />
</body>




</html>

<script>

    //function ponumValidate() {
     
    //    var field = $("#searchPONumber").val();
    //    if (field == "") {
            
    //        $("#ponumValidation").css("display", "inline");
    //        $("#ponumValidation").css("color", "red");
    //        $("#ponumValidation").text("Required");

    //        $('#searchBtn').submit(function (event) {
    //            event.preventDefault();
    //        });
            
    //        return false;
           
    //    }
    //    return true;
    
    //}

    //function returnToPreviousPage() {
    //    window.history.back();
    //}



</script>