@model Inventory_mvc.Models.User

@{
    ViewBag.Title = "Create";
}

<h2>Create New User</h2>


@using (Html.BeginForm("Create", "User", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>User</h4>*@
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.userID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.userID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.password , htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <input type="password" name="password" value="" class="form-control" required />
                @*@Html.PasswordFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <input type="text" name="contactNo"  value="" class="form-control" required />
                @*@Html.TextBoxFor(model => model.contactNo, new {style="width:360px;", placeholder = "", htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.contactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.userEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.DropDownListFor(model => model.role, ViewBag.RoleList as IEnumerable<SelectListItem> )*@
                <select name="role" class="custom-select my-1 mr-sm-2">
                    @foreach (var role in ViewBag.RoleList as List<SelectListItem>)
                    {
                        int value = Int32.Parse(role.Value);
                        <option value=@value> @role.Text </option>
                    }
                </select>

                <input type="hidden" value="@Model.departmentCode" name="departmentCode"/>

                @*@Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.departmentCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.departmentCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.departmentCode, "", new { @class = "text-danger" })
            </div>
        </div>*@

        
                
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "SMUserList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
