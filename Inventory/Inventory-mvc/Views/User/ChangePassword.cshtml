@model Inventory_mvc.ViewModel.ChangePasswordViewModel

@{
    ViewBag.Title = "View";
    var incorrectMessage=TempData["IncorrectPassword"];
    var sameMessage = TempData["SameWithOldPassword"];
    var passnotChanged = TempData["Passwordnotchanged"];
    var NotMatch = TempData["NotMatch"];
}

<h2>View</h2>


@using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, new { @class = "form-group" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ChangePasswordViewModel</h4>
        <hr />
        <input type="hidden" name="UserID" value="@Model.UserID"/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })

                @if (incorrectMessage != null)
                {
                    <div class="alert alert-danger">
                        @incorrectMessage.ToString();
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            
                @if (sameMessage != null)
                {
                    <div class="alert alert-danger">
                        @sameMessage.ToString();
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                @if (NotMatch != null)
                {
                    <div class="alert alert-danger">
                        @NotMatch.ToString();
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirm" class="btn btn-lg btn-primary" />
            </div>
        </div>
    </div>
}
<p>
    @if(passnotChanged!=null)
    {
        passnotChanged.ToString();
    }
</p>
<div>
    @Html.ActionLink("Back to List", "Edit")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
