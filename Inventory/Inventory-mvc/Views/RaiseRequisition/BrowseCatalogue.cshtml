@model PagedList.IPagedList<Inventory_mvc.Models.Stationery>

@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Browse Stationery Catalogue";

    List<Inventory_mvc.Models.Category> categoryList = ViewBag.CategoryList;

    var addItemMessage = TempData["AddItemMessage"];
}


<h3>Stationery Catalogue</h3>



@using (Html.BeginForm("BrowseCatalogue", "RaiseRequisition", FormMethod.Get, new { @class = "form-inline" }))
{

    <table class="table pagination">
        <tr>
            <td>
                @Html.Label("Description", new { @class = "col-sm-2 col-form-label" })
            </td>
            <td>
                @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control mx-sm-3" })
            </td>
            <td>
                @Html.Label("Category", new { @class = "col-sm-2 col-form-label" })
            </td>
            <td>
                <select name="categoryID" class="custom-select my-1 mr-sm-2">
                    <option value="All" selected="selected">All</option>
                    @foreach (var category in categoryList)
                    {
                        string selected = "";

                        if (ViewBag.CategoryID == category.categoryID.ToString())
                        {
                            selected = "selected";
                        }
                        <option value="@category.categoryID" @selected> @category.categoryName </option>
                    }
                </select>
            </td>
            <td>
                <input type="submit" class="btn btn-primary" value="Search" />

                @Html.ActionLink("Reset", "ResetCatalogue", "RaiseRequisition", null, new { @class = "btn btn-danger" })
            </td>
        </tr>
    </table>
}


@if (addItemMessage != null)
{
    <div class="alert alert-success">
        @addItemMessage.ToString()
    </div>
}


<table class="table">
    <tr>
        <th>
            @Html.Label("Category")
        </th>
        <th>
            @Html.Label("Description")
        </th>
        <th>
            @Html.Label("UOM")
        </th>
        <th>
            @Html.Label("Action")
        </th>
    </tr>

    @foreach (var item in Model)
            {
                using (Html.BeginForm("AddNewRequestItem", "RaiseRequisition", new { itemCode = item.itemCode, searchString = ViewBag.SearchString, categoryID = ViewBag.CategoryID, page = ViewBag.Page }, FormMethod.Post, new { @class = "form" }))
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.categoryName)
                </td>
                <td>
                    @Html.HiddenFor(modelItem => item.itemCode)
                    @Html.DisplayFor(modelItem => item.description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.unitOfMeasure)
                </td>
                <td>
                    <div class="form-inline">
                        <input type="number" name="quantity" min="1" class="form-control" placeholder="Quantity" />
                        <input type="submit" value="Add Request" class="btn btn-outline-success" />
                    </div>
                </td>
            </tr>
        }
    }
</table>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("BrowseCatalogue",
                     new { searchString = ViewBag.SearchString, categoryID = ViewBag.CategoryID, page }))


        @Html.ActionLink("Go To Requisition Form", "NewRequisition", "RaiseRequisition", null, new { @class = "btn btn-primary" })





        <!-- The below code is for the modal dialog -->
        <div class="modal fade" id="addRequestDialog" data-backdrop="false"></div>
