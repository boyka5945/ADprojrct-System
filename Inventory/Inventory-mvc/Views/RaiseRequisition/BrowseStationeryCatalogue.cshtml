@model PagedList.IPagedList<Inventory_mvc.Models.Stationery>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Browse Stationery Catalogue";

    List<Inventory_mvc.Models.Category> categoryList = ViewBag.CategoryList;
}

<h2>Browse Stationery Catalogue</h2>


@using (Html.BeginForm("BrowseStationeryCatalogue", "RaiseRequisition", FormMethod.Get))
{
    <table class="table pagination">
        <tr>
            <td>
                @Html.Label("Description")
            </td>
            <td>
                @Html.TextBox("searchString", ViewBag.SearchString as string)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label("Category")
            </td>
            <td>
                <select name="categoryID">
                    <option value="All" selected="selected">All</option>
                    @foreach(var category in categoryList)
                    {
                        string selected = "";

                        if(ViewBag.CategoryID == category.categoryID.ToString())
                        {
                            selected = "selected";
                        }
                        <option value="@category.categoryID" @selected> @category.categoryName </option>
                    }
                </select>
            </td>
        </tr>

        <tr>
            <td colspan="2">
                <input type="submit" value="Search" />
                <a href="@Url.Action("ResetCatalogue")">
                    <input type="button" value="Reset"/>
                </a>
            </td>
        </tr>
    </table>
}

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("BrowseStationeryCatalogue",
    new { searchString = ViewBag.SearchString, categoryID = ViewBag.CategoryID, page }))
<table class="table">
    <tr>
        <th>
            @Html.Label("Category")
        </th>
        <th>
            @Html.Label("Description")
        </th>
        <th>
            @Html.Label("UOM")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category.categoryName)
            </td>
            <td>
                @Html.HiddenFor(modelItem => item.itemCode)
                @Html.DisplayFor(modelItem => item.description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.unitOfMeasure)
            </td>
            <td>
                <input type="button" value="Add to Pending Request List" />
            </td>
        </tr>
    }
</table>

<input type="button" value="Go to Pending Request List" />


