@model IEnumerable<Inventory_mvc.ViewModel.RaiseRequisitionViewModel>


@{
    var removeItemMessage = TempData["RemoveItemMessage"];

    int count = Model.Count();

    string disabled = "";
    if(count == 0)
    {
        disabled = "disabled";
    }

    var addItemMessage = TempData["AddItemMessage"];
    var addItemErrorMessage = TempData["AddItemErrorMessage"];
    var editItemMessage = TempData["EditItemMessage"];
    var submitErrorMessage = TempData["SubmitErrorMessage"];
}

<h2>Requisition Form</h2>

<br />
<button type="button" class="btn btn-success" onclick="AddRequestItem()">Add New Item</button>
@Html.ActionLink("Go To Catalogue", "BrowseCatalogue", null, new { @class = "btn btn-primary" })
<br />
<br />

@if (removeItemMessage != null)
{
    <div class="alert alert-success">
        @removeItemMessage.ToString()
    </div>
}

@if (addItemMessage != null)
{
    <div class="alert alert-success">
        @addItemMessage.ToString()
    </div>
}

@if (addItemErrorMessage != null)
{
<div class="alert alert-danger">
    @addItemErrorMessage.ToString()
</div>
}

@if (editItemMessage != null)
{
    <div class="alert alert-success">
        @editItemMessage.ToString()
    </div>
}

@if (submitErrorMessage != null)
{
    <div class="alert alert-danger">
        @submitErrorMessage.ToString()
    </div>
}


<br />

@using (Html.BeginForm("SubmitRequisition", "RaiseRequisition", FormMethod.Post, new { @class = "form" }))
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UOM)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {               
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                    @Html.HiddenFor(modelItem => item.ItemCode, new { id="itemCode"})
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UOM)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td> 
                    <a href="#" onclick="EditRequestItem('@item.ItemCode')">Edit</a> |
                    @Html.ActionLink("Remove", "RemoveRequestItem", "RaiseRequisition", new { itemCode = item.ItemCode }, new {})
                </td>
            </tr>
        }
    </table>

    <br />

        <input type="submit" value="Submit Requisition" class="btn btn-success @disabled" />
        <a href="@Url.Action("ClearAllRequestItem", "RaiseRequisition" )">
            <input type="button" value="Clear All" class="btn btn-danger" @disabled />
        </a>

    <br />

}

<!-- The below code is for the modal dialog -->
<div class="modal fade" id="addItemModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" id="addItemModalBodyDiv">
        </div>
    </div>
</div>



<script>
    function AddRequestItem(){

        var url = "/RaiseRequisition/CreateEditRequestItem";

        $("#addItemModalBodyDiv").load(url, function () {
            $("#addItemModal").modal("show");
        })
    }

    function EditRequestItem(code) {

        var itemCode = code;

        var url = "/RaiseRequisition/CreateEditRequestItem?itemCode=" + itemCode;

        $("#addItemModalBodyDiv").load(url, function () {
            $("#addItemModal").modal("show");
        })
    }

</script>



