@model IEnumerable<Inventory_mvc.ViewModel.RaiseRequisitionViewModel>


@{
    var removeItemMessage = TempData["RemoveItemMessage"];

    var successMessage = TempData["SuccessMessage"];
    var errorMessage = TempData["ErrorMessage"];
}

<h2>Requisition Form</h2>

<br />
<button type="button" class="btn btn-success" onclick="AddRequestItem()">Add New Item</button>
@Html.ActionLink("Go To Catalogue", "BrowseCatalogue", null, new { @class = "btn btn-primary" })
<br />
<br />

@if (successMessage != null)
{
    <div class="alert alert-success">
        @successMessage.ToString()
    </div>
}

@if (errorMessage != null)
{
    <div class="alert alert-danger">
        @errorMessage.ToString()
    </div>
}

<br />

@if (Model.Count() == 0)
{
    <h4><i>Your requistion form is empty.</i></h4>
}
else
{
    using (Html.BeginForm("SubmitRequisition", "RaiseRequisition", FormMethod.Post, new { @class = "form" }))
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UOM)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                        @Html.HiddenFor(modelItem => item.ItemCode, new { id = "itemCode" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UOM)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        <a href="#" onclick="EditRequestItem('@item.ItemCode')">Edit</a> |
                        @Html.ActionLink("Remove", "RemoveRequestItem", "RaiseRequisition", new { itemCode = item.ItemCode }, new { })
                    </td>
                </tr>
            }
        </table>

        <br />

        <input type="submit" value="Submit Requisition" class="btn btn-success" />
        <a href="@Url.Action("ClearAllRequestItem", "RaiseRequisition" )">
            <input type="button" value="Clear All" class="btn btn-danger"/>
        </a>

        <br />
    }
}


<!-- The below code is for the modal dialog -->
<div class="modal fade" id="addItemModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" id="addItemModalBodyDiv">
        </div>
    </div>
</div>



<script>
    function AddRequestItem(){

        var url = "/RaiseRequisition/CreateEditRequestItem";

        $("#addItemModalBodyDiv").load(url, function () {
            $("#addItemModal").modal("show");
        })
    }

    function EditRequestItem(code) {

        var itemCode = code;

        var url = "/RaiseRequisition/CreateEditRequestItem?itemCode=" + itemCode;

        $("#addItemModalBodyDiv").load(url, function () {
            $("#addItemModal").modal("show");
        })
    }

</script>



