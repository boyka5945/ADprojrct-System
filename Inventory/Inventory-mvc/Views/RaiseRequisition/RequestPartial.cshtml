@model Inventory_mvc.ViewModel.RaiseRequisitionViewModel

@{
    Layout = null;

    List<SelectListItem> stationerySelectItemList = ViewBag.StationerySelectItemList;

    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);


}

@using (Ajax.BeginForm("AddNewRequestItem", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "reLoad" }, new { @class = "form" }))
{
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title">Add Request</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-sm-10">
                    <select id="combobox">
                        @foreach (var item in stationerySelectItemList)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>


                <div class="form-group row">
                    @Html.Label("Description", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Description, new { @readonly = "readony" })
                        @Html.HiddenFor(model => model.ItemCode)
                    </div>
                </div>

                <div class="form-group row">
                    @Html.Label("UOM", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.UOM, new { @readonly = "readony" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.Label("Quantity", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Quantity, new { @min = "1" })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="modal-footer">

                <input type="submit" class="btn btn-primary" value="Save" />
                <input type="button" class="btn btn-secondary" value="Cancel" data-dismiss="modal" />

            </div>
        </div>
    </div>
}
