@model Inventory_mvc.ViewModel.StationeryViewModel

@{
    ViewBag.Title = "Edit";
    List<string> unitOfMeasure = ViewBag.unitOfMeasure;

}

<h2>Edit Stationery</h2>

@using (Html.BeginForm("Edit", "Stationery", FormMethod.Post, new { @class = "form-group" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemCode)

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })*@

                @Html.DropDownListFor(model => model.CategoryID, ViewBag.selectListofCategory as SelectList, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReorderLevel, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ReorderLevel, new { htmlAttributes = new { @class = "form-control", min = "1", value = "1" } })
                @Html.ValidationMessageFor(model => model.ReorderLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReorderQty, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ReorderQty, new { htmlAttributes = new { @class = "form-control", min = "1", value = "1" } })
                @Html.ValidationMessageFor(model => model.ReorderQty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitOfMeasure, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.UnitOfMeasure, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitOfMeasure, "", new { @class = "text-danger" })*@

                <select name="unitOfMeasure" class="form-control">
                    @foreach (var unitOfMea in unitOfMeasure)
                    {
                        <option value="@unitOfMea"> @unitOfMea </option>
                    }
                </select>
            </div>
        </div>

    

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstSupplierCode, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.FirstSupplierCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstSupplierCode, "", new { @class = "text-danger" })*@

                @Html.DropDownListFor(model => model.FirstSupplierCode, ViewBag.selectList as SelectList, new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecondSupplierCode, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.SecondSupplierCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecondSupplierCode, "", new { @class = "text-danger" })*@
                @Html.DropDownListFor(model => model.SecondSupplierCode, ViewBag.selectList as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SecondSupplierCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThirdSupplierCode, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.ThirdSupplierCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ThirdSupplierCode, "", new { @class = "text-danger" })*@
                @Html.DropDownListFor(model => model.ThirdSupplierCode, ViewBag.selectList as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ThirdSupplierCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", type = "number", min = "1", value = "1" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-lg btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
