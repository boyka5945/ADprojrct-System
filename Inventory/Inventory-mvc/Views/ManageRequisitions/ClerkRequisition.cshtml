@*@model IEnumerable<Inventory_mvc.Models.BigModelView>*@

@model PagedList.IPagedList<Inventory_mvc.Models.BigModelView>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "ClerkRequisition";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Allocate requisition</h2>
@using (Html.BeginForm("AllocateRequisition", "ManageRequisitions", new { }, FormMethod.Post, new { @class = "form", @id = "checkForm" }))
{
<table class="table">
    <tr>
        <th>
            @Html.Label("Item Code")
        </th>
        <th>
            @Html.Label("Description")
        </th>
        <th>
            @Html.Label("Retrieved Quantity")
        </th>
        <th>
            requisitionNo
        </th>
        <th>
            departmentName
        </th>
        <th>
            requestDate
        </th>
        <th>
            @Html.Label("Unfulfilled Quantity")
        </th>
        <th>
            allocateQty
        </th>
    </tr>

@for (int i = 0; i < Model.Count(); i++)
{ 
    <tr>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].itemCode)
            <input type="hidden" name="[@i].itemCode" value="@Model.ToList()[i].itemCode" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].description)
            <input type="hidden" name="[@i].description" value="@Model.ToList()[i].description" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].retrievedQuantity)
            <input type="hidden" name="[@i].retrievedQuantity" value="@Model.ToList()[i].retrievedQuantity" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].requisitionRecord.requisitionNo)
            <input type="hidden" name="[@i].requisitionRecord.requisitionNo" value="@Model.ToList()[i].requisitionRecord.requisitionNo" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].requisitionRecord.Department.departmentName)
            <input type="hidden" name="[@i].requisitionRecord.Department.departmentName" value="@Model.ToList()[i].requisitionRecord.Department.departmentName" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].requisitionRecord.requestDate)
            <input type="hidden" name="[@i].requisitionRecord.requestDate" value="@Model.ToList()[i].requisitionRecord.requestDate" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].unfulfilledQty)
            <input type="hidden" name="[@i].unfulfilledQty" value="@Model.ToList()[i].unfulfilledQty" />
        </td>
        <td>
            <input type="number" name="[@i].allocateQty" value="@Model.ToList()[i].allocateQty" class="form-control" min="0" onchange="SaveData()" required />
        </td>
    </tr>
}


</table>
<div class="col-md-offset-2 col-md-0">
    <input type="submit" value="Allocate" class="btn btn-default" />
</div>
@Html.ActionLink("Disbursement", "DisbursementList", "ManageRequisitions");
}
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ClerkRequisition",
                     new { page }))

<script>
    function SaveData()
    {
        var myformdata = $("#checkForm").serializeArray(); // convert form to array

        $.ajax({
            type: "POST",
            url: '@Url.Action("KeepTempData", "ManageRequisitions")',
            data: $.param(myformdata), // convert to url-encoded form
            //success: function () {
                //alert("success");
            //}
        });
    }
</script>