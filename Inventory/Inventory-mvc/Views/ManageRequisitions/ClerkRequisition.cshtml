@*@model IEnumerable<Inventory_mvc.Models.BigModelView>*@

@model PagedList.IPagedList<Inventory_mvc.Models.BigModelView>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "ClerkRequisition";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Allocate Requisition</h2>
<div>
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"].ToString()
        </div>
    }
    else if(TempData["Successful"] != null) 
    {
        <div class="alert alert-success">
            @TempData["Successful"].ToString()
        </div>
    }
</div>

@using (Html.BeginForm("AllocateRequisition", "ManageRequisitions", new { }, FormMethod.Post, new { @class = "form", @id = "checkForm" }))
{
<table class="table">
    <tr>
        <th>
            @Html.Label("Item Code")
        </th>
        <th>
            @Html.Label("Description")
        </th>
        <th>
            @Html.Label("Retrieved Quantity")
        </th>
        <th>
            @Html.Label("Requisition No.")
        </th>
        <th>
            @Html.Label("Department Name")
        </th>
        <th>
            @Html.Label("Request Date")
        </th>
        <th>
            @Html.Label("Unfulfilled Quantity")
        </th>
        <th>
            @Html.Label("Allocate Quantity")
        </th>
    </tr>

@for (int i = 0; i < Model.Count(); i++)
{ 
    <tr>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].itemCode)
            <input type="hidden" name="[@i].itemCode" value="@Model.ToList()[i].itemCode" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].description)
            <input type="hidden" name="[@i].description" value="@Model.ToList()[i].description" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].retrievedQuantity)
            <input type="hidden" name="[@i].retrievedQuantity" value="@Model.ToList()[i].retrievedQuantity" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].requisitionRecord.requisitionNo)
            <input type="hidden" name="[@i].requisitionRecord.requisitionNo" value="@Model.ToList()[i].requisitionRecord.requisitionNo" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].requisitionRecord.Department.departmentName)
            <input type="hidden" name="[@i].requisitionRecord.Department.departmentName" value="@Model.ToList()[i].requisitionRecord.Department.departmentName" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].requisitionRecord.requestDate)
            <input type="hidden" name="[@i].requisitionRecord.requestDate" value="@Model.ToList()[i].requisitionRecord.requestDate" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].unfulfilledQty)
            <input type="hidden" id="a[@i]" name="[@i].unfulfilledQty" value="@Model.ToList()[i].unfulfilledQty" />
        </td>
        <td>
            <input type="number" id ="@i" name="[@i].allocateQty" value="@Model.ToList()[i].allocateQty" class="form-control" min="0" max="@Model.ToList()[i].unfulfilledQty" onchange="SaveData(@i)" required />
        </td>
    </tr>
}


</table>
<div class="col-md-offset-2 col-md-0">
    <input type="submit" value="Allocate" class="btn btn-primary" />
</div>
@Html.ActionLink("Disbursement", "DisbursementList", "ManageRequisitions");
}
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ClerkRequisition",
                     new { page }))

<script>
    function SaveData(i)
    {
        if (parseInt(document.getElementById(i).value) > parseInt(document.getElementById("a[" + i + "]").value)) {
            alert("AllocateQty can not more than unfulfilledQty.");
        } else if (parseInt(document.getElementById(i).value) < 0){
            alert("AllocateQty can not less than 0.");
        } else {
            var myformdata = $("#checkForm").serializeArray(); // convert form to array

            $.ajax({
                type: "POST",
                url: '@Url.Action("KeepTempData", "ManageRequisitions")',
                data: $.param(myformdata), // convert to url-encoded form
                //success: function () {
                    //alert("success");
                //}
        });
        }
        //alert(i);

    }
</script>