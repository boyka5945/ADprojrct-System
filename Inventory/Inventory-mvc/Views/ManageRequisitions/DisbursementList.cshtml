@*@model IEnumerable<Inventory_mvc.ViewModel.Disbursement>*@
@model PagedList.IPagedList<Inventory_mvc.ViewModel.Disbursement>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Message</h2>
<div>
    
    @using (Html.BeginForm())
    {
        @Html.Label("DepartmentName : ")
        if (ViewBag.Select != null)
        {
            @Html.DropDownList("ID", (List<SelectListItem>)ViewData["list"], (string)ViewBag.Select, new { onchange = "form.submit();" })
        }
        else
        {
            @Html.DropDownList("ID", (List<SelectListItem>)ViewData["list"], "Zoology Dept", new { onchange = "form.submit();" })
        }
        <br/>
        @Html.Label("CollectionPoint:")
        @Html.Label((string)ViewBag.Point)
    }
</div>
<table class="table">
    <tr>
        <th>
            @Html.Label("Item Description")
        </th>
        <th></th>
        <th>
            @Html.Label("Quantity")
        </th>
        <th>
            Actual RetrievedQty
        </th>
        <th>

        </th>
    </tr>
@for (int i = 0; i < Model.Count(); i++)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].itemDescription)
            <input type="hidden" name="[@i].itemDescription" value="@Model.ToList()[i].itemDescription" />
        </td>
        <td>
            @Html.HiddenFor(modelItem => Model.ToList()[i].itemCode)
            <input type="hidden" name="[@i].itemCode" value="@Model.ToList()[i].itemCode" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].quantity)
            <input type="hidden" name="[@i].quantity" value="@Model.ToList()[i].quantity" />
        </td>
        <td>
            <input type="number" id="ActualQty" class="form-control" min="0" required />
        </td>
        <td>
            <input type="button" name="button" class="form-control" value="Confirm" onclick="SaveData('@Model.ToList()[i].itemCode')" />
        </td>
    </tr>
}

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("DisbursementList",
                     new { page }))


        @Html.Label("Representative :")
        @Html.Label((string)ViewBag.rp)
<script>
    function SaveData(itemCode) {
        var myformdata = document.getElementById("ActualQty").value; // convert form to array

        window.location.href = "/ManageRequisitions/updateFulfilledQty?key1=" + myformdata + "&key2=" + itemCode;
            // convert to url-encoded form
            //success: function () {
            //alert("success");
            //}kjf
    }
</script>