@*@model IEnumerable<Inventory_mvc.ViewModel.Disbursement>*@
@model PagedList.IPagedList<Inventory_mvc.ViewModel.Disbursement>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Message</h2>
<div>
    
    @using (Html.BeginForm())
    {
        @Html.Label("DepartmentName : ")
        if (ViewBag.Select != null)
        {
            @Html.DropDownList("ID", (List<SelectListItem>)ViewData["list"], (string)ViewBag.Select, new { onchange = "form.submit();" })
        }
        else
        {
            @Html.DropDownList("ID", (List<SelectListItem>)ViewData["list"], "Zoology Dept", new { onchange = "form.submit();" })
        }
        <br/>
        @Html.Label("CollectionPoint:")
        @Html.Label((string)ViewBag.Point)
    }
</div>
<table class="table">
    <tr>
        <th>
            @Html.Label("Item Description")
        </th>
        <th></th>
        <th>
            @Html.Label("Quantity")
        </th>
        <th>
            Actual RetrievedQty
        </th>
        <th>

        </th>
    </tr>
@for (int i = 0; i < Model.Count(); i++)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].itemDescription)
            <input type="hidden" name="[@i].itemDescription" value="@Model.ToList()[i].itemDescription" />
        </td>
        <td>
            @Html.HiddenFor(modelItem => Model.ToList()[i].itemCode)
            <input type="hidden" id="@i" name="[@i].itemCode" value="@Model.ToList()[i].itemCode" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.ToList()[i].quantity)
            <input type="hidden" id="AllocateQty[@i]" name="[@i].quantity" value="@Model.ToList()[i].quantity" />
        </td>
        <td>
            <input type="number" id="ActualQty[@i]" class="form-control" min="0" max="@Model.ToList()[i].quantity" required />
        </td>
        <td>
            <input type="button" name="button" class="form-control" value="Confirm" onclick="SaveData(@i)" />
        </td>
    </tr>
}

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("DisbursementList",
                     new { page }))


        @Html.Label("Representative :")
        @Html.Label((string)ViewBag.rp)
<script>
    function SaveData(i) {
        var ActualQty = document.getElementById("ActualQty["+ i +"]").value; // convert form to array
        var itemCode = document.getElementById(i).value; // convert form to array
        var AllocateQty = document.getElementById("AllocateQty[" + i + "]").value;
        //if (parseInt(document.getElementById(i).value) > parseInt(document.getElementById("a[" + i + "]").value)) {
        //    alert("ActualRetrieveQty can not more than AllocateQty.");
        //} else {
        window.location.href = '@Url.Action("updateFulfilledQty", "ManageRequisitions")?key1=' + ActualQty + "&key2=" + itemCode + "&key3=" + AllocateQty;
        //}
            // convert to url-encoded form
            //success: function () {
            //alert("success");
            //}
    }
</script>