<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.5/jspdf.debug.js"></script>
<script src="~/Scripts/chart-colors.js"></script>
<script src="~/Scripts/Chart.PieceLabel.js"></script>

@{
    string year = (string)ViewBag.Year;
    string month = (string)ViewBag.Month;
    string dept = (string)ViewBag.Dept;
}

<input type="hidden" value="@year" name="year" id="year" />
<input type="hidden" value="@month" name="month" id="month" />
<input type="hidden" value="@dept" name="dept" id="dept" />
<br />
<a href="#" id="downloadPdf">Download Chart as PDF</a>
<div id="reportPage"><canvas id="myChart"> </canvas></div>

<script>


    var year = $('#year').val();
    var month = $('#month').val();
    var dept = $('#dept').val();

    var title = 'Requisition Amount of ' + dept;

    if(month == "")
    {
        title = title + ' in Year ' + year;
    }
    else
    {
        title = title + ' in ' + month + ' ' + year;
    }


    var labels = @Html.Raw(Json.Encode(ViewBag.XLabels));
    var doughnutData = @Html.Raw(Json.Encode(ViewBag.YDoughnutData));

    var color = Chart.helpers.color;
    var myChart = document.getElementById("myChart").getContext("2d");

    var backgrdColor = [];
    var colorNames = Object.keys(window.chartColors);

    for (var index = 0; index < labels.length ; index++) 
    {
        var colorName = colorNames[index % colorNames.length];
        var alphaVal = Math.random() * (1 - 0.75) + 0.75;
        var newColor =color(window.chartColors[colorName]).alpha(alphaVal).rgbString();       
        backgrdColor.push(newColor);
    }


    var showQtyChart = new Chart("myChart", {
        type: 'doughnut',
        data: {
            labels: labels,
            datasets:
            [
                {
                    backgroundColor: backgrdColor,
                    data: doughnutData,
                    label: dept,
                },
            ],
        },
        options:
            {
                pieceLabel: 
                {
                    //render: 'value',
                    render: function (args) {
                        return '$ ' + args.value;
                    },
                    fontColor: '#000',
                    position: 'outside',
                    fontSize: 10
                },
                responsive: true,
                legend:
                {
                    display: true,
                    position: 'right',
                    labels:
                    {
                        fontColor: window.chartColors.black,
                    }

                },
                title:
                {
                    display: true,
                    fontSize: 16,
                    fontStyle: 'Bold',
                    text: title,
                },
                animation: 
                {
                    animateScale: true,
                    animateRotate: true,
                }
            }
    });


    $('#downloadPdf').click(function(event) {
        // get size of report page
        var reportPageHeight = $('#reportPage').innerHeight();
        var reportPageWidth = $('#reportPage').innerWidth();

        // create a new canvas object that we will populate with all other canvas objects
        var pdfCanvas = $('<canvas />').attr({
            id: "canvaspdf",
            width: reportPageWidth,
            height: reportPageHeight
        });

        // keep track canvas position
        var pdfctx = $(pdfCanvas)[0].getContext('2d');
        var pdfctxX = 0;
        var pdfctxY = 0;
        var buffer = 100;

        // for each chart.js chart
        $("canvas").each(function(index) {
            // get the chart height/width
            var canvasHeight = $(this).innerHeight();
            var canvasWidth = $(this).innerWidth();

            // draw the chart into the new canvas
            pdfctx.drawImage($(this)[0], pdfctxX, pdfctxY, canvasWidth, canvasHeight);
            pdfctxX += canvasWidth + buffer;
        });

        // create new pdf and add our new canvas as an image
        var pdf = new jsPDF('l', 'pt', [reportPageWidth, reportPageHeight]);
        pdf.addImage($(pdfCanvas)[0], 'PNG', 50, 50);

        // download the pdf
        pdf.save(title + '.pdf');
    });

</script>


