<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>
<script src="~/Scripts/chart-colors.js"></script>

@{
    string year = (string)ViewBag.Year;
    string month = (string)ViewBag.Month;
}

<input type="hidden" value="@year" name="year" id="year" />
<input type="hidden" value="@month" name="month" id="month" />

<canvas id="myChart"> </canvas>

<script>
    var year = $('#year').val();
    var month = $('#month').val();

    var title = ['Department Requisition Amount in'];

    if(month == "")
    {
        title.push('Year ' + year);
    }
    else
    {
        title.push(month + ' ' + year);
    }

    var labels = @Html.Raw(Json.Encode(ViewBag.XLabels));
    var barData = @Html.Raw(Json.Encode(ViewBag.YBarData));

    var color = Chart.helpers.color;
    var myChart = document.getElementById("myChart").getContext("2d");

    var showQtyChart = new Chart("myChart", {
        type: "bar",
        data: {
            labels: labels,
            datasets:
            [
                {
                    type: "bar",
                    backgroundColor: color(chartColors.blue).alpha(0.5).rgbString(),
                    borderColor: window.chartColors.blue,
                    borderWidth: 2,
                    data: barData,
                },
            ],
        },
        options:
            {
                legend:
                {
                    display: false,
                    labels:
                    {
                        fontColor: window.chartColors.black,
                    }

                },
                title:
                {
                    display: true,
                    fontSize: 16,
                    fontStyle: 'Bold',
                    text: title,
                },
                tooltips:
                {
                    mode: 'index',
                    intersect: true
                },
                scales:
                {
                    yAxes:
                    [{
                        scaleLabel:
                        {
                            display: true,
                            labelString: 'Amount ($)',
                            fontSize: 14,
                        },

                        ticks:
                        {
                            beginAtZero:true,
                        }
                    }],

                    xAxes:
                    [{
                        scaleLabel:
                        {
                            display: true,
                            labelString: 'Department',
                            fontSize: 14,
                        }
                    }]
                }
            }
    });



    // Define a plugin to provide data labels
    Chart.plugins.register({
        afterDatasetsDraw: function(chart, easing) {
            // To only draw at the end of animation, check for easing === 1
            var ctx = chart.ctx;

            chart.data.datasets.forEach(function (dataset, i) {
                var meta = chart.getDatasetMeta(i);
                if (!meta.hidden) {
                    meta.data.forEach(function(element, index) {
                        // Draw the text in black, with the specified font
                        ctx.fillStyle = 'rgb(0, 0, 0)';

                        var fontSize = 16;
                        var fontStyle = 'normal';
                        var fontFamily = 'Helvetica Neue';
                        ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);

                        // Just naively convert to string for now
                        var dataString = dataset.data[index].toString();

                        // Make sure alignment settings are correct
                        ctx.textAlign = 'center';
                        ctx.textBaseline = 'middle';

                        var padding = 5;
                        var position = element.tooltipPosition();
                        ctx.fillText(dataString, position.x, position.y - (fontSize / 2) - padding);
                    });
                }
            });
        }
    });
</script>

